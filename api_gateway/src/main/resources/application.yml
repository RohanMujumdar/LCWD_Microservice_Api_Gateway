spring:
  application:
    name: api_gateway

# This below URI will help our resource server to validate our access token with auth server.
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: "http://localhost:8086/realms/microservice_food_app/protocol/openid-connect/certs"


#  It allows the gateway to automatically route to services registered
#  with Eureka using their service names.
  cloud:
    gateway:
#      routes:
#        - id: foodService
#          uri: lb://FOODSERVICE
##         If our predicate is matched, then our request will be forwarded to the above URI.
#          predicates:
#            - Path=/food/**
#          filters:
#            - RewritePath=/food/?(?<remaining>.*), /$\{remaining}
#
#
#
#        - id: restaurantService
#          uri: lb://RESTAURANTSERVICE
##         If our predicate is matched, then our request will be forwarded to the above URI.
#          predicates:
#            - Path=/restaurant/**
#          filters:
#            - RewritePath=/restaurant/?(?<remaining>.*), /$\{remaining}

#     Inorder to create manual routes, the below should be false.
#     If you want gateway to create routes automatically, then enable it to true.
      discovery:
        locator:
          enabled: false


#     Retry Mechanism
      httpclient:
#     Time taken to connect to a microservice
        connect-timeout: 1000
#     Time taken to get a response from a microservice
        response-timeout: 5s


  data:
    redis:
      host: localhost
      port: 6379



server:
  port: 9094

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true

  instance:
    prefer-ip-address: true


management:
#  It enables the /actuator/gateway/** endpoints (read-only mode),
#  which expose Spring Cloud Gateway internal info
  endpoint:
    gateway:
      access: read_only

# Enables all the actuator endpoints.
  endpoints:
    web:
      exposure:
        include: "*"
  info:
    env:
      enabled: true

info:
  app:
    name: "Api Gateway"


resilience4j:
  circuitbreaker:
    configs:

#     By default it means that this configuration will be applied to all the cicuit breaker patterns.
      default:
        sliding-window-size: 10
        permitted-number-of-calls-in-half-open-state: 2
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10000

#     Without this, our circuit breaker will not be fully wired with the default behavior.
      instances:
        circuitBreakerFood:
          baseConfig: default


logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG
    org.springframework.web.reactive.function.client: DEBUG
    org.springframework.cloud.gateway.filter.ratelimit: DEBUG



